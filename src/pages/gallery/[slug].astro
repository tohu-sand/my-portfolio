---
import { getCollection, type CollectionEntry, render } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

type ArtworkEntry = CollectionEntry<"gallery">;

export async function getStaticPaths() {
  const artworks = await getCollection("gallery");
  return artworks.map((art: ArtworkEntry) => ({
    params: { slug: art.id.replace(/\.md$/, '') },
    props:  { entry: art },
  }));
}
export const prerender = true;

const { entry } = Astro.props as { entry: ArtworkEntry };
const { Content } = await render(entry);
const { data } = entry;
---
<BaseLayout title={data.title}>
  <article class="prose dark:prose-invert mx-auto">
    <h1 class="text-3xl font-bold mb-4 text-stone-900 dark:text-stone-100">{data.title}</h1>
    <div class="mb-6">
      <a href={data.image} target="_blank" rel="noopener noreferrer" class="block cursor-zoom-in">
        <img
          src={data.mediumImage || data.image}
          alt={data.title}
          class="w-full rounded-lg hover:opacity-90 transition-opacity duration-200"
        />
      </a>
    </div>
    {data.description && (
    <p class="mb-4 text-stone-700 dark:text-stone-300">{data.description}</p>
    )}
    <Content />

    <p class="mt-8 text-sm text-stone-500 dark:text-stone-400">
      公開日:
      <time datetime={data.date.toISOString()}>
        {data.date.toLocaleDateString("ja-JP")}
      </time>
      {data.tags && (
        <>
          &nbsp;|&nbsp;タグ:
          {data.tags.map((t: string) => (
            <span class="inline-block ml-1 px-2 py-0.5 bg-stone-200 dark:bg-stone-700 text-stone-800 dark:text-stone-200 rounded">{t}</span>
          ))}
        </>
      )}
    </p>
  </article>
</BaseLayout>
