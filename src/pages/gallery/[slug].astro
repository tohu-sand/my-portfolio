---
import { getCollection, type CollectionEntry, render } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { idToSlug } from "../../utils/slug";
import { formatDateJP } from "../../utils/date";

type ArtworkEntry = CollectionEntry<"gallery">;

export async function getStaticPaths() {
  const artworks = await getCollection("gallery");
  return artworks.map((art: ArtworkEntry) => ({
  params: { slug: idToSlug(art.id) },
    props:  { entry: art },
  }));
}
export const prerender = true;

const { entry } = Astro.props as { entry: ArtworkEntry };
const { Content } = await render(entry);
const { data } = entry;
const dateStr = formatDateJP(data.date);

const allArtworks = await getCollection("gallery");
const sortedArtworks = allArtworks.sort((a, b) => 
  new Date(a.data.date).getTime() - new Date(b.data.date).getTime()
);

const currentIndex = sortedArtworks.findIndex(art => art.id === entry.id);
const prevArtwork = currentIndex > 0 ? sortedArtworks[currentIndex - 1] : null;
const nextArtwork = currentIndex < sortedArtworks.length - 1 ? sortedArtworks[currentIndex + 1] : null;
---
<BaseLayout title={data.title}>
  <article class="prose dark:prose-invert mx-auto">
    <h1 class="text-3xl font-bold mb-4 text-stone-900 dark:text-stone-100">{data.title}</h1>
    <div class="mb-6">
      <a href={data.image} target="_blank" rel="noopener noreferrer" class="block cursor-zoom-in">
        <img
          src={data.mediumImage || data.image}
          alt={data.title}
          class="w-full rounded-lg hover:opacity-90 transition-opacity duration-200"
        />
      </a>
    </div>
    {data.description && (
    <p class="mb-4 text-stone-700 dark:text-stone-300">{data.description}</p>
    )}
    <Content />

    <p class="mt-8 text-sm text-stone-500 dark:text-stone-400">
      公開日:
  <time datetime={data.date.toISOString()}>{dateStr}</time>
      {data.tags && (
        <>
          &nbsp;|&nbsp;タグ:
          {data.tags.map((t: string) => (
            <span class="inline-block ml-1 px-2 py-0.5 bg-stone-200 dark:bg-stone-700 text-stone-800 dark:text-stone-200 rounded">{t}</span>
          ))}
        </>
      )}
    </p>

        <nav class="mt-12 pt-8 mb-5 border-t border-stone-200 dark:border-stone-700">
      <div class="flex justify-between items-center">
    {nextArtwork ? (
          <a 
      href={`/gallery/${idToSlug(nextArtwork.id)}`}
            class="group flex items-center space-x-3 text-stone-600 dark:text-stone-400 hover:text-stone-900 dark:hover:text-stone-100 transition-colors"
          >
            <svg class="w-5 h-5 transform group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            <span class="text-sm">次の作品</span>
          </a>
        ) : (
          <div></div>
        )}

    {prevArtwork ? (
          <a 
      href={`/gallery/${idToSlug(prevArtwork.id)}`}
            class="group flex items-center space-x-3 text-stone-600 dark:text-stone-400 hover:text-stone-900 dark:hover:text-stone-100 transition-colors"
          >
            <span class="text-sm">前の作品</span>
            <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        ) : (
          <div></div>
        )}
      </div>
    </nav>
  </article>
</BaseLayout>
